/* You can add global styles to this file, and also import other style files */
/*
  import styles to enable angular-material dialogs
  ...dunno about 'deeppurple-amber' theme. so far
  it's  not imposing that look.
*/
/*@import '@angular/material/prebuilt-themes/deeppurple-amber.css';*/
@import './app/vpvisit/styles.css';

/* Define bootstrap zero columns, a.k.a. hidden */
.col-xs-0, 
.col-sm-0,
.col-md-0,
.col-lg-0 {
  flex: 0 0 0;
  max-width: 0;
  padding-right: 0;
  padding-left: 0;
}

/*
  make our own linked text
*/
.link {
  cursor: pointer;
  color: blue;
}

.pointer {
  cursor: pointer;
}

.vce-green {
  background: #235650;
  color: white;
}

.dev-background {
  background: maroon;
  color: white;
}

/*
  Moved here from html-dialog-app.css because it has no effect, there!

  Remove all surrounding space from the dialog-box's info icon so it
  doesn't muck spacing of labels, etc. it adorns.

  NOTE: !important is necessary to have effect
*/
html-dialog-app {
  padding: 0 !important;
  margin: 0 !important;
  border: 0 !important;
}

/*
  reduce padding on the navbar
*/
nav, .navbar, .navbar-nav > li > a, .navbar-expand {
  padding-top:5px !important;
  padding-bottom:5px !important;
  height: 30px;
}

/*
  remove vertical padding for nav items to allow navbar to govern
*/
.nav-item .nav-link {
  padding-top:0px !important;
  padding-bottom:0px !important;
}

/*
  Attempt vert menu on small screen
*/
.navbar-nav {
  text-align: center;
}
.navbar .navbar-nav .nav-item .nav-link:hover, 
.navbar .navbar-nav .nav-item .nav-link:active 
{
  color: cyan;
}

/* Make top-menu vertical for screen-size less than pixels below */
@media (max-width: 600px) 
{
  .navbar, 
  /*.navbar-nav, */
  .navbar .navbar-nav,
  /*.navbar .navbar-nav.nav-item, */
  .navbar .navbar-nav .nav-item .nav-link {
    display: inline;
  }
  li .nav-item .dropdown,
  li div .dropdown-menu .show,
  li div
  {
    text-align: right;
  }
}

/*
  custom style to alter font size in bootstrap small tables
*/
.vce-table-sm {
  font-size: 14px;
}

/*
  Custom style for leaflet popups
*/
.leaflet-custom-popup {
  font-size: 10px;
}

.leaflet-table td {
  border: 1px solid lightgrey;
}

#jumbotron {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 20px;
  padding-right: 20px;
  margin-top: 5px;
  margin-bottom: 5px;
}
/*
#jumbotron {
  padding-top: 0px;
  padding-bottom: 0px;
  padding-left: 0px;
  padding-right: 0px;
  margin-top: 0px;
  margin-bottom: 0px;
}
*/
/*
  This keeps pages having minimal content looking reasonable by pushing
  the footer to the bottom, leaving emtpy space above the footer and
  below the content.
 */
#container {
  min-height:550px !important;
}
/*
.container-fluid {
  padding-top: 0px !important;
  padding-bottom: 0px !important;
  padding-left: 0px !important;
  padding-right: 0px !important;
  margin-top: 0px !important;
  margin-bottom: 0px !important;
  margin-left: 0px !important;
  margin-right: 0px !important;
}
*/

#footer {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 20px;
  padding-right: 20px;
}

.form-inline > * {
   margin:5px 3px;
}

/*
  make an item topmost in the display.
  eg. a link on top of the map that does things to the map...
*/
.topmost {
  position: relative;
  z-index: 999;
}

/*
  Used for the small vce logo on the top-left of the navbar.

  Non-shrinking elements wreak havoce with bootstrap columns,
  which are designed to always shrink. Make this work, had to
  remove the last column on the right.
*/
.vce-logo-noshrink {
  min-width: 125px; /*the desired min-width*/
}

.fill-to-end {
  width: 100%;
}

/*
  simple spacing for radio buttons
*/
.radio-button-horiz {
  display: inline-block;
  margin-right:3px;
  margin-left:9px;
}
.radio-button-vert {
  margin-right:5px;
  margin-left:5px;
}
.radio-button-justify-left {
  margin-right:5px;
}

/*
  add padding to buttons
*/
.btn {
  margin-right: 20px;
}

/*
  handle a row of text-input with leading and trailing labels
*/
.text-input-block {
  display: inline-block;
  margin-right:5px;
  margin-left:5px;
}
.leading-label {
  display: inline-block;
  margin-right:0px;
  margin-left:5px;
}
.trailing-label {
  display: inline-block;
  margin-right:5px;
  margin-left:0px;
}

/*
handle buttons on top of text inputs
*/
.overlay-input {
  float: left;
  flex-grow: 2;
}
.overlay-button {
  float: left;
}
.overlay-wrapper {
    display: inline-flex;
    width: 75%;
}

.btn-link .btn a {
  padding: 0px;
}

.content-left-border-right {
  border-right: 1px dashed #333;
}

label.disabled span.disabled {
  color: #cccc;
}

.circle {
  position:relative;
  top: 4px;
  width: 10px;
  height: 10px;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  border: 1px solid black;
  background: green;
}

.square {
  position:relative;
  top: 4px;
  height: 10px;
  width: 10px;
  border:solid 1px black;
  background-color: transparent;
}

.diamond {
  background: white;
  border-right:solid 1px black;
  border-left:solid 1px black;
  border-top:solid 1px black;
  border-bottom:solid 1px black;
  height:8px;
  width:8px;
  position:relative;
  top:5px;
  transform:rotate(45deg);
}

.triangle {
  position: relative;
  top:-12px;
  width:0;
  border-bottom:solid 11px black;
  border-right:solid 6px transparent;
  border-left:solid 6px transparent;
}

.triangle .filled {
  position: relative;
  top:17px;
  left:-4px;
  width:0;
  border-bottom:solid 8px white;
  border-right:solid 4px transparent;
  border-left:solid 4px transparent;
}

input[type="checkbox"].x4-checkbox {
    -webkit-appearance: initial;
    appearance: initial;
    background: white;
    width: 35px;
    height: 35px;
    border: solid mediumgrey 1px;
    position: relative;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%,0%);
    -moz-transform: translate(-50%,0%);
    -ms-transform: translate(-50%,0%);
    transform: translate(-50%,0%);
}
input[type="checkbox"].x4-checkbox:checked {
    background: white;
}
input[type="checkbox"].x4-checkbox:disabled {
    background: transparent;
}
input[type="checkbox"].x4-checkbox:checked:after {
    /* Heres your symbol replacement */
    content: "X";
    color: black;
    /* The following positions my tick in the center,
     * but you could just overlay the entire box
     * with a full after element with a background if you want to */
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%,-50%);
    -moz-transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    transform: translate(-50%,-50%);
    /*
     * If you want to fully change the check appearance, use the following:
     * content: " ";
     * width: 100%;
     * height: 100%;
     * background: blue;
     * top: 0;
     * left: 0;
     */
}

/* handle file-input control appearance */
.btn-file {
    position: relative;
    overflow: hidden;
}
.btn-file input[type=file] {
    position: absolute;
    top: 0;
    right: 0;
    min-width: 100%;
    min-height: 100%;
    font-size: 100px;
    text-align: right;
    filter: alpha(opacity=0);
    opacity: 0;
    outline: solid black 2px;
    background: white;
    cursor: inherit;
    display: block;
}

.no-margin-rt {
  margin-right: 0px;
}
.no-margin-lt {
  margin-left: 0px;
}

/* Start by setting display:none to make this hidden.
   Then we position it in relation to the viewport window
   with position:fixed. Width, height, top and left speak
   for themselves. Background we set to 80% white with
   our animation centered, and no-repeating */
.loading_overlay {
    display:    none;
    position:   fixed;
    z-index:    1000;
    top:        0;
    left:       0;
    height:     100%;
    width:      100%;
    background: rgba( 255, 255, 255, .8 )
                url('http://i.stack.imgur.com/FhHRx.gif')
                50% 50%
                no-repeat;
}

/* When anything has the vce_loading class, we turn
   the scrollbar off with overflow:hidden */

/* Anytime anything has the vce_loading class, our
   modal element will be visible */
.show_loading_overlay {
    display: block;
    overflow: hidden;
}
